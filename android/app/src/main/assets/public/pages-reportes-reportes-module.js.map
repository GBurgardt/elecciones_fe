{"version":3,"sources":["webpack:///./src/app/pages/reportes/reportes.module.ts","webpack:///./src/app/pages/reportes/reportes.page.html","webpack:///./src/app/pages/reportes/reportes.page.scss","webpack:///./src/app/pages/reportes/reportes.page.ts"],"names":[],"mappings":"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","file":"pages-reportes-reportes-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { ReportesPage } from './reportes.page';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { UtilsService } from 'src/app/services/utils.service';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        RouterModule.forChild([\n            {\n                path: '',\n                component: ReportesPage\n            }\n        ])\n    ],\n    declarations: [ReportesPage],\n    providers: [\n        AuthService,\n        UtilsService\n    ]\n})\nexport class ReportesPageModule { }\n","module.exports = \"<ion-content style=\\\"margin: 15px\\\">\\n\\n    <ion-header>\\n        <ion-toolbar color=\\\"primary\\\">\\n            <ion-title>Resumen de Resultadosï¿¼</ion-title>\\n        </ion-toolbar>\\n    </ion-header>\\n\\n    <ion-content id=\\\"content\\\">\\n\\n        <ion-item-divider>\\n            <ion-label>\\n                Filtros\\n            </ion-label>\\n\\n            <ion-icon class=\\\"btn-eye\\\" *ngIf=\\\"!showFiltros\\\" (click)=\\\"showFiltros = !showFiltros\\\" slot=\\\"end\\\" name=\\\"eye\\\">\\n            </ion-icon>\\n            <ion-icon class=\\\"btn-eye\\\" *ngIf=\\\"showFiltros\\\" (click)=\\\"showFiltros = !showFiltros\\\" slot=\\\"end\\\"\\n                name=\\\"eye-off\\\"></ion-icon>\\n        </ion-item-divider>\\n\\n        <div *ngIf=\\\"showFiltros\\\" class=\\\"filtros-container\\\">\\n\\n            <ion-item class=\\\"ion-margin-bottom\\\">\\n                <ion-label position=\\\"floating\\\">Seleccione una categoria: </ion-label>\\n                <ion-select [compareWith]=\\\"compareSelect\\\" [(ngModel)]=\\\"categoria\\\" (ngModelChange)=\\\"refrescarLista()\\\">\\n                    <ion-select-option *ngFor=\\\"let c of categorias | async\\\" [value]=\\\"c\\\">\\n                        {{ c.descripcion }}\\n                    </ion-select-option>\\n                </ion-select>\\n            </ion-item>\\n\\n            <ion-item class=\\\"ion-margin-bottom\\\">\\n                <ion-label position=\\\"floating\\\">Filtrar por mesa: </ion-label>\\n\\n                <ion-input #inputMesa type=\\\"number\\\"></ion-input>\\n                <ion-button (click)=\\\"onClickBuscarPorMesa(inputMesa)\\\" slot=\\\"end\\\">\\n                    <ion-icon slot=\\\"icon-only\\\" name=\\\"search\\\"></ion-icon>\\n                </ion-button>\\n                <ion-button (click)=\\\"onClickMesasTodas()\\\" slot=\\\"end\\\" fill=\\\"outline\\\">\\n                    Todas\\n                </ion-button>\\n            </ion-item>\\n\\n        </div>\\n\\n        <ion-item-divider sticky>\\n            <ion-label>\\n                <span style=\\\"font-weight: bolder\\\">Categoria:</span> {{ categoria ? categoria.descripcion : 'Todas' }}\\n            </ion-label>\\n\\n            <ion-label slot=\\\"end\\\" style=\\\"padding-right: calc(var(--padding-start) + var(--ion-safe-area-left, 0px));\\\">\\n                <span style=\\\"font-weight: bolder\\\">Mesa:</span> {{ mesa ? mesa.descripcion : 'Todas' }}\\n            </ion-label>\\n        </ion-item-divider>\\n\\n        <div class=\\\"resultados-container\\\">\\n            <ion-item *ngFor=\\\"let r of resultados | async\\\">\\n                <ion-avatar slot=\\\"start\\\">\\n                    <img [src]=\\\"r.urlImagen\\\">\\n                </ion-avatar>\\n                <ion-label>\\n                    <h2>{{ r.candidatoNombre }}: <span>{{ r.porcentaje }}%</span></h2>\\n                    <p>{{ r.proyectados }} proyectados</p>\\n                </ion-label>\\n            </ion-item>\\n        </div>\\n\\n    </ion-content>\\n\\n\\n</ion-content>\\n\\n<ion-footer>\\n    <ion-toolbar>\\n        <ion-title>\\n            {{ puntosInformadosMsg }}\\n        </ion-title>\\n    </ion-toolbar>\\n</ion-footer>\"","module.exports = \".btn-eye {\\n  margin-right: 10px;\\n  padding-top: 3px; }\\n\\n.search-container {\\n  display: flex; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2J1cmdhcmR0L3Byb2plY3RzL2VsZWNjaW9uZXNfZmUvc3JjL2FwcC9wYWdlcy9yZXBvcnRlcy9yZXBvcnRlcy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxrQkFBa0I7RUFDbEIsZ0JBQWdCLEVBQUE7O0FBR3BCO0VBQ0ksYUFBYSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvcmVwb3J0ZXMvcmVwb3J0ZXMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJ0bi1leWUge1xuICAgIG1hcmdpbi1yaWdodDogMTBweDtcbiAgICBwYWRkaW5nLXRvcDogM3B4O1xufVxuXG4uc2VhcmNoLWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbn0iXX0= */\"","import { Component } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Observable } from 'rxjs';\nimport { Candidato } from 'src/app/models/candidato.model';\nimport { Mesa } from 'src/app/models/mesa.model';\nimport { Categoria } from 'src/app/models/categoria.model';\nimport { ActivatedRoute } from '@angular/router';\nimport { Resultado } from 'src/app/models/resultado.model';\nimport { IonInput } from '@ionic/angular';\nimport { UtilsService } from 'src/app/services/utils.service';\n@Component({\n    selector: 'app-reportes',\n    templateUrl: 'reportes.page.html',\n    styleUrls: ['reportes.page.scss'],\n})\nexport class ReportesPage {\n    /**\n     * Listas\n     */\n    mesas: Mesa[];\n    categorias: any;\n    // categorias: Observable<Categoria[]>;\n\n    /**\n     * Seleccionados\n     */\n    categoria: Categoria;\n    mesa: Mesa;\n\n    /**\n     * Resultados\n     */\n    resultados: any;\n    // resultados: Observable<Resultado[]>;\n    puntosInformadosMsg: string;\n\n    /**\n     * Otros\n     */\n    showFiltros: boolean = false;\n\n    constructor(\n        private authService: AuthService,\n        private utilsService: UtilsService\n    ) { }\n\n    ngOnInit() {\n        this.categorias = this.authService.getAllCategorias();\n        this.authService.getAllMesas().then((resp: any) => this.mesas = resp)\n\n        // Categoria por defecto gobernador\n        this.categorias\n            .then(resp => {\n                this.categoria = resp && resp.length > 0 ? resp[0] : null\n                this.refrescarLista();\n            })\n\n    }\n    \n    /**\n     * Refresca lista\n     */\n    refrescarLista = () => {\n\n        this.authService.getPuntosInformados(this.categoria ? this.categoria.id : 0)\n            .then(\n                resp => {\n                    \n                    this.puntosInformadosMsg = resp\n                }\n            )\n\n        this.resultados = this.authService.getResultados(\n            this.categoria ? this.categoria.id : 0, \n            this.mesa ? this.mesa.id : 0\n        );\n\n    }\n\n    onClickBuscarPorMesa = (e: IonInput) => {\n\n        const value = e.value;\n        \n        this.mesa = this.mesas.find(\n            m => m.descripcion === value\n        )\n        // debugger;\n\n        if (this.mesa) {\n            this.refrescarLista();\n        } else {\n            // No encontrada\n            this.utilsService.showError({\n                error: {\n                    status: 'error',\n                    body: `Mesa no encontrada`\n                }\n            });\n\n        }\n\n    }\n\n    onClickMesasTodas = () => {\n        this.mesa = null;\n        this.refrescarLista();\n    }\n\n\n    compareSelect = (c1: Categoria | Mesa, c2: Categoria | Mesa) => c1 && c2 ? c1.id === c2.id : c1 === c2\n}\n"],"sourceRoot":""}