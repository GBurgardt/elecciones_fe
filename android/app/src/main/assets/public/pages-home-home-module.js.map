{"version":3,"sources":["webpack:///./src/app/constants/candidatos-tipos.ts","webpack:///./src/app/constants/reglas.ts","webpack:///./src/app/models/mesa-candidato.model.ts","webpack:///./src/app/pages/home/home.module.ts","webpack:///./src/app/pages/home/home.page.html","webpack:///./src/app/pages/home/home.page.scss","webpack:///./src/app/pages/home/home.page.ts","webpack:///./src/app/services/camera.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe;IACX,SAAS,EAAE,CAAC;IACZ,kBAAkB,EAAE,CAAC;IACrB,WAAW,EAAE,CAAC;CACjB;;;;;;;;;;;;;ACJD;AAAe;IACX,SAAS,EAAE,GAAG;CACjB;;;;;;;;;;;;;ACCD;AAAA;AAAA;IAKI,uBAAY,aAIX;QACG,IAAI,CAAC,IAAI,GAAG,aAAa,CAAC,IAAI,CAAC;QAC/B,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC,SAAS,CAAC;QACzC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC,aAAa,CAAC,CAAC,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC;IAC1F,CAAC;IACL,oBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBwC;AACM;AACF;AACA;AACE;AAER;AACmB;AACI;AACA;AAqB9D;IAAA;IAA8B,CAAC;IAAlB,cAAc;QAnB1B,8DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC;oBAClB;wBACI,IAAI,EAAE,EAAE;wBACR,SAAS,EAAE,mDAAQ;qBACtB;iBACJ,CAAC;aACL;YACD,YAAY,EAAE,CAAC,mDAAQ,CAAC;YACxB,SAAS,EAAE;gBACP,kEAAW;gBACX,sEAAa;gBACb,2EAAY;aACf;SACJ,CAAC;OACW,cAAc,CAAI;IAAD,qBAAC;CAAA;AAAJ;;;;;;;;;;;;AC9B3B,8wBAA8wB,iBAAiB,ibAAib,iBAAiB,0VAA0V,iCAAiC,yIAAyI,iCAAiC,qDAAqD,uBAAuB,kqC;;;;;;;;;;;ACAl1D,4BAA4B,wBAAwB,iBAAiB,iBAAiB,uBAAuB,sBAAsB,EAAE,2BAA2B,kBAAkB,4BAA4B,mBAAmB,EAAE,gBAAgB,sBAAsB,sBAAsB,kBAAkB,mCAAmC,EAAE,mCAAmC,wBAAwB,yBAAyB,EAAE,+CAA+C,+uC;;;;;;;;;;;;;;;;;;;;;;;;ACAjb;AACgB;AAIT;AACe;AACI;AAGN;AACG;AACnB;AAQ9C;IAuBI,kBACY,WAAwB,EACxB,KAAqB,EACrB,aAA4B,EAC5B,YAA0B;QAJtC,iBAKK;QAJO,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAgB;QACrB,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAc;QARtC,gBAAW,GAAW,KAAK,CAAC;QAyB5B,iBAAY,GAAG,UAAC,CAAO;YACnB,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YACpB,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,WAAW,CAAC,mCAAmC,CAAC,KAAI,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;QACpG,CAAC;QAED;;;WAGG;QACH,sBAAiB,GAAG,UAAC,CAAY;YAC7B,YAAI,CAAC,WAAW,CAAC,wBAAwB,CAAC,CAAC,CAAC,EAAE,CAAC;iBAC1C,IAAI,CACD,UAAC,UAAe,IAAK,iBAAU;iBAC1B,IAAI,CACD,UAAC,CAAY,EAAE,CAAY,IAAK,QAAC,CAAC,aAAa,GAAG,CAAC,CAAC,aAAa,EAAjC,CAAiC,CACpE;iBACA,GAAG,CACA,WAAC,IAAI,WAAI,iFAAa,CAAC;gBACnB,IAAI,EAAE,KAAI,CAAC,IAAI;gBACf,SAAS,EAAE,CAAC;aACf,CAAC,EAHG,CAGH,CACL,EATgB,CAShB,CACR;iBACA,IAAI,CAAC,UAAC,GAAoB,IAAK,YAAI,CAAC,eAAe,GAAG,GAAG,EAA1B,CAA0B,CAAC;QAb/D,CAa+D;QAGnE;;WAEG;QACH,gBAAW,GAAG;YACV,KAAI,CAAC,aAAa,CAAC,wBAAwB,EAAE;iBACxC,IAAI,CACD,UAAC,CAAC,IAAK,YAAI,CAAC,WAAW,GAAG,CAAC,EAApB,CAAoB,CAC9B;QACT,CAAC;QAED;;WAEG;QACH,iBAAY,GAAG;YAEX,4DAA4D;YAC5D,IAAM,WAAW,GAAG,KAAI,CAAC,eAAe;iBACnC,IAAI,CACD,UAAC,EAAiB;gBACd,QAAC,EAAE,CAAC,aAAa;oBACjB,EAAE,CAAC,aAAa,KAAK,CAAC;YADtB,CACsB,CAC7B;YAEL,IAAI,WAAW,EAAE;gBACb,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC;oBACxB,KAAK,EAAE;wBACH,MAAM,EAAE,OAAO;wBACf,IAAI,EAAE,4CAA4C;qBACrD;iBACJ,CAAC;gBACF,OAAO,KAAK;aACf;YAED,8DAA8D;YAC9D,IAAM,mBAAmB,GAAG,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,YAAE,IAAI,SAAE,CAAC,SAAS,CAAC,aAAa,KAAK,0EAAe,CAAC,WAAW,EAA1D,CAA0D,CAAC,CAAC;YAExH,IAAI,mBAAmB,CAAC,aAAa,GAAG,gEAAM,CAAC,SAAS,EAAE;gBACtD,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC;oBACxB,KAAK,EAAE;wBACH,MAAM,EAAE,OAAO;wBACf,IAAI,EAAE,2DAAoD,gEAAM,CAAC,SAAW;qBAC/E;iBACJ,CAAC;gBACF,OAAO,KAAK,CAAC;aAChB;YAGD,qFAAqF;YACrF,IAAM,aAAa,GAAG,KAAI,CAAC,eAAe;iBACrC,MAAM,CACH,YAAE;gBACE,SAAE,CAAC,SAAS,CAAC,aAAa,KAAK,0EAAe,CAAC,WAAW;oBAC1D,EAAE,CAAC,SAAS,CAAC,aAAa,KAAK,0EAAe,CAAC,kBAAkB;YADjE,CACiE,CACxE;iBACA,MAAM,CACH,UAAC,GAAG,EAAE,EAAE,IAAK,UAAG,GAAG,MAAM,CAAC,EAAE,CAAC,aAAa,CAAC,EAA9B,CAA8B,EAC3C,CAAC,CACJ;YAEL,IAAI,aAAa,GAAG,gEAAM,CAAC,SAAS,EAAE;gBAClC,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC;oBACxB,KAAK,EAAE;wBACH,MAAM,EAAE,OAAO;wBACf,IAAI,EAAE,sFAA+E,gEAAM,CAAC,SAAW;qBAC1G;iBACJ,CAAC;gBACF,OAAO,KAAK;aACf;YAGD,iHAAiH;YACjH,IAAM,yBAAyB,GAAG,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,YAAE,IAAI,SAAE,CAAC,SAAS,CAAC,aAAa,KAAK,0EAAe,CAAC,kBAAkB,EAAjE,CAAiE,CAAC,CAAC;YAErI,IACI,yBAAyB,CAAC,aAAa,GAAG,mBAAmB,CAAC,aAAa;gBAC3E,yBAAyB,CAAC,aAAa,GAAG,aAAa,EACzD;gBACE,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC;oBACxB,KAAK,EAAE;wBACH,MAAM,EAAE,OAAO;wBACf,IAAI,EAAE,wHAAwH;qBACjI;iBACJ,CAAC;gBACF,OAAO,KAAK,CAAC;aAChB;YAID,OAAO,IAAI,CAAC;QAChB,CAAC;QAED;;WAEG;QACH,qBAAgB,GAAG;YAEf,eAAe;YACf,IAAM,YAAY,GAAG,KAAI,CAAC,YAAY,EAAE,CAAC;YAEzC,QAAQ,CAAC;YAET,IAAI,YAAY,EAAE;gBAEd,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBACxB,KAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,KAAI,CAAC,eAAe,EAAE,KAAI,CAAC,WAAW,EAAE,KAAI,CAAC,IAAI,EAAE,KAAI,CAAC,SAAS,CAAC;qBAClG,IAAI,CACD,cAAI;oBACA,KAAI,CAAC,YAAY,CAAC,WAAW,EAAE;yBAC1B,IAAI,CACD,cAAI;wBACA,KAAI,CAAC,QAAQ,EAAE,CAAC;wBAChB,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;oBAC7B,CAAC,CACJ;gBACT,CAAC,CACJ;qBACA,KAAK,CACF,aAAG,IAAI,YAAI,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC;qBAClC,IAAI,CACD,cAAI,IAAI,YAAI,CAAC,WAAW,GAAG,KAAK,EAAxB,CAAwB,CACnC,EAHE,CAGF,CACR;aACR;QACL,CAAC;QAED,aAAQ,GAAG,UAAC,SAAiB;YAAjB,6CAAiB;YACzB,IAAI,SAAS,EAAE;gBACX,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;gBAC5B,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,KAAI,CAAC,WAAW,GAAG,IAAI;gBACvB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;aACzB;iBAAM;gBACH,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBACjB,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;gBAC5B,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,KAAI,CAAC,WAAW,GAAG,IAAI;gBACvB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;aACzB;QACL,CAAC;IApLG,CAAC;IAEL;;OAEG;IACH,2BAAQ,GAAR;QAAA,iBASC;QARG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CACvB,gBAAM;YACF,KAAI,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;YAC9C,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,MAAM,CAAC,eAAe,CAAC;QACjF,CAAC,CACJ,CAAC;QAEF,sDAAsD;IAC1D,CAAC;IA1CQ,QAAQ;QALpB,+DAAS,CAAC;YACP,QAAQ,EAAE,UAAU;YACpB,4FAA6B;;SAEhC,CAAC;+EAyB2B,kEAAW;YACjB,8DAAc;YACN,6EAAa;YACd,2EAAY;OA3B7B,QAAQ,CAkNpB;IAAD,eAAC;CAAA;AAlNoB;;;;;;;;;;;;;;;;;;;;ACpBsB;AAEsB;AAEnB;AAI9C;IACI,uBACY,MAAc,EACd,IAAU;QAFtB,iBAGK;QAFO,WAAM,GAAN,MAAM,CAAQ;QACd,SAAI,GAAJ,IAAI,CAAM;QAGtB;;WAEG;QACH,6BAAwB,GAAG,cAAM,WAAI,OAAO,CACxC,UAAC,OAAO,EAAE,MAAM;YACZ,YAAI,CAAC,MAAM,CAAC,UAAU,CAAC;gBACnB,OAAO,EAAE,EAAE;gBACX,eAAe,EAAE,KAAI,CAAC,MAAM,CAAC,eAAe,CAAC,QAAQ;gBACrD,YAAY,EAAE,KAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI;gBAC3C,SAAS,EAAE,KAAI,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO;aAC3C,CAAC;iBACG,IAAI,CACD,mBAAS;gBACL,YAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,SAAS,CAAC;qBACzC,IAAI,CACD,UAAC,SAAc;oBACX,gBAAS,CAAC,IAAI,CACV,UAAS,IAAI;wBAET,IAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;wBAChC,MAAM,CAAC,SAAS,GAAG,UAAS,CAAC;4BACzB,IAAM,OAAO,GAAG,IAAI,IAAI,CAAC,CAAE,IAAI,CAAC,MAAM,CAAE,EAAG;gCACvC,IAAI,EAAE,YAAY;6BACrB,CAAC,CAAC;4BAEH,OAAO,CAAC,OAAO,CAAC;wBACpB,CAAC,CAAC;wBAEF,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;oBAEnC,CAAC,EACD,aAAG,IAAI,aAAM,CAAC,GAAG,CAAC,EAAX,CAAW,CACrB;gBAhBD,CAgBC,CACR;qBACA,KAAK,CAAC,aAAG,IAAI,aAAM,CAAC,GAAG,CAAC,EAAX,CAAW,CAAC;YArB9B,CAqB8B,CAErC;iBACA,KAAK,CAAC,aAAG,IAAI,aAAM,CAAC,GAAG,CAAC,EAAX,CAAW,CAAC;QAhC9B,CAgC8B,CACrC,EAnCgC,CAmChC;IAxCG,CAAC;IAJI,aAAa;QADzB,gEAAU,EAAE;+EAGW,+DAAM;YACR,2DAAI;OAHb,aAAa,CAmEzB;IAAD,oBAAC;CAAA;AAnEyB","file":"pages-home-home-module.js","sourcesContent":["export default {\n    CANDIDATO: 1,\n    TOTAL_VOTOS_VALIDO: 2,\n    TOTAL_VOTOS: 3\n}","export default {\n    MAX_VOTOS: 350\n}","import { Mesa } from './mesa.model';\nimport { Candidato } from './candidato.model';\n\nexport class MesaCandidato {\n    mesa: Mesa;\n    candidato: Candidato;\n    cantidadVotos: number;\n\n    constructor(mesaCandidato: {\n        mesa: Mesa,\n        candidato: Candidato,\n        cantidadVotos?: number\n    }) {\n        this.mesa = mesaCandidato.mesa;\n        this.candidato = mesaCandidato.candidato;\n        this.cantidadVotos = mesaCandidato.cantidadVotos ? mesaCandidato.cantidadVotos : null; \n    }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { HomePage } from './home.page';\nimport { AuthService } from '../../services/auth.service';\nimport { CameraService } from '../../services/camera.service';\nimport { UtilsService } from 'src/app/services/utils.service';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        RouterModule.forChild([\n            {\n                path: '',\n                component: HomePage\n            }\n        ])\n    ],\n    declarations: [HomePage],\n    providers: [\n        AuthService,\n        CameraService,\n        UtilsService\n    ]\n})\nexport class HomePageModule { }\n","module.exports = \"<ion-content style=\\\"margin: 15px\\\" class=\\\"btn-container\\\">\\n\\n    <ion-header class=\\\"ion-margin-bottom\\\">\\n        <ion-toolbar color=\\\"primary\\\">\\n            <ion-title>Ingreso resultados</ion-title>\\n        </ion-toolbar>\\n    </ion-header>\\n\\n\\n    <!-- <ion-item-divider> -->\\n    <div class=\\\"divider\\\">\\n        <span>\\n            Seleccione mesa y categoria\\n        </span>\\n    </div>\\n\\n    <div class=\\\"select-container\\\">\\n        <ion-item class=\\\"ion-margin-bottom\\\">\\n            <ion-label position=\\\"floating\\\">Seleccione una mesa: </ion-label>\\n            <ion-select [(ngModel)]=\\\"mesa\\\" (ngModelChange)=\\\"onChangeMesa($event)\\\">\\n                <ion-select-option *ngFor=\\\"let m of mesas | async\\\" [value]=\\\"m\\\">\\n                    {{ m.descripcion }}\\n                </ion-select-option>\\n            </ion-select>\\n        </ion-item>\\n\\n        <ion-item class=\\\"ion-margin-bottom\\\">\\n            <ion-label position=\\\"floating\\\">Seleccione una categoria: </ion-label>\\n            <ion-select [(ngModel)]=\\\"categoria\\\" (ngModelChange)=\\\"onChangeCategoria($event)\\\">\\n                <ion-select-option *ngFor=\\\"let c of categorias | async\\\" [value]=\\\"c\\\">\\n                    {{ c.descripcion }}\\n                </ion-select-option>\\n            </ion-select>\\n        </ion-item>\\n    </div>\\n\\n    <div *ngIf=\\\"mesasCandidatos\\\" class=\\\"divider\\\">\\n        <span>\\n            Ingrese cantidad votos\\n        </span>\\n    </div>\\n\\n    <div class=\\\"list-container\\\">\\n        <ion-list>\\n            <div class=\\\"item-list\\\" [ngStyle]=\\\"{ background: mc.candidato.color }\\\" *ngFor=\\\"let mc of mesasCandidatos\\\">\\n                <div class=\\\"item-list-content\\\">\\n                    <ion-label [ngStyle]=\\\"{ background: mc.candidato.color }\\\" position=\\\"floating\\\">\\n                        {{ mc.candidato.nombre }}\\n                    </ion-label>\\n                    <ion-input [(ngModel)]=\\\"mc.cantidadVotos\\\" type=\\\"number\\\"></ion-input>\\n                </div>\\n                <div class=\\\"item-list-foto\\\">\\n                    <!-- <img [src]=\\\"mc.candidato.urlimagen\\\" width=\\\"93\\\" height=\\\"93\\\"> -->\\n                    <ion-avatar slot=\\\"end\\\">\\n                        <img [src]=\\\"mc.candidato.urlimagen\\\">\\n                    </ion-avatar>\\n                </div>\\n            </div>\\n        </ion-list>\\n    </div>\\n\\n    <div *ngIf=\\\"true\\\" class=\\\"divider\\\">\\n        <span>\\n            Saque una foto de la planilla\\n        </span>\\n    </div>\\n\\n\\n    <div class=\\\"btn-camera-container\\\">\\n        <ion-button [disabled]=\\\"fileCaptura\\\" shape=\\\"round\\\" size=\\\"large\\\" (click)=\\\"onClickFoto()\\\">\\n            <ion-icon slot=\\\"icon-only\\\" name=\\\"camera\\\"></ion-icon>\\n        </ion-button>\\n    </div>\\n\\n    \\n    <ion-button *ngIf=\\\"!isSubmiting\\\" (click)=\\\"onClickConfirmar()\\\" expand=\\\"full\\\">Confirmar</ion-button>\\n    <ion-button *ngIf=\\\"isSubmiting\\\" disabled expand=\\\"full\\\">\\n        <ion-spinner name=\\\"crescent\\\"></ion-spinner>\\n    </ion-button>\\n\\n</ion-content>\"","module.exports = \".divider {\\n  background: #89a9e0;\\n  padding: 6px;\\n  color: white;\\n  text-align: center;\\n  padding-top: 10px; }\\n\\n.btn-camera-container {\\n  display: flex;\\n  justify-content: center;\\n  margin: 15px 0; }\\n\\n.item-list {\\n  font-size: 1.1rem;\\n  font-weight: bold;\\n  display: flex;\\n  justify-content: space-between; }\\n\\n.item-list .item-list-content {\\n    padding-top: 10px;\\n    padding-left: 10px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2J1cmdhcmR0L3Byb2plY3RzL2VsZWNjaW9uZXNfZmUvc3JjL2FwcC9wYWdlcy9ob21lL2hvbWUucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksbUJBQW1CO0VBQ25CLFlBQVk7RUFDWixZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLGlCQUFpQixFQUFBOztBQUdyQjtFQUNJLGFBQWE7RUFDYix1QkFBdUI7RUFFdkIsY0FBYyxFQUFBOztBQVVsQjtFQUNJLGlCQUFpQjtFQUNqQixpQkFBaUI7RUFDakIsYUFBYTtFQUViLDhCQUE4QixFQUFBOztBQUxsQztJQVFRLGlCQUFpQjtJQUNqQixrQkFBa0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2hvbWUvaG9tZS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZGl2aWRlciB7XG4gICAgYmFja2dyb3VuZDogIzg5YTllMDtcbiAgICBwYWRkaW5nOiA2cHg7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBwYWRkaW5nLXRvcDogMTBweDtcbn1cblxuLmJ0bi1jYW1lcmEtY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXG4gICAgbWFyZ2luOiAxNXB4IDA7XG5cbiAgICAvLyBmb250LXNpemU6IDEuNXJlbTtcblxuICAgIC8vIGlvbi1pY29uIHtcbiAgICAvLyAgICAgcGFkZGluZzogMTBweDtcbiAgICAvLyB9XG59XG5cblxuLml0ZW0tbGlzdCB7XG4gICAgZm9udC1zaXplOiAxLjFyZW07XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgZGlzcGxheTogZmxleDtcblxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcblxuICAgIC5pdGVtLWxpc3QtY29udGVudCB7XG4gICAgICAgIHBhZGRpbmctdG9wOiAxMHB4O1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7ICAgIFxuICAgIH1cbn0iXX0= */\"","import { Component } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Categoria } from '../../models/categoria.model';\nimport { Observable } from 'rxjs';\nimport { Mesa } from 'src/app/models/mesa.model';\nimport { ActivatedRoute } from '@angular/router';\nimport { CameraService } from 'src/app/services/camera.service';\nimport { MesaCandidato } from 'src/app/models/mesa-candidato.model';\nimport { map } from 'rxjs/operators';\nimport { AlertController } from '@ionic/angular';\nimport { UtilsService } from 'src/app/services/utils.service';\nimport candidatosTipos from 'src/app/constants/candidatos-tipos';\nimport reglas from 'src/app/constants/reglas';\nimport { Candidato } from 'src/app/models/candidato.model';\n\n@Component({\n    selector: 'app-home',\n    templateUrl: 'home.page.html',\n    styleUrls: ['home.page.scss'],\n})\nexport class HomePage {\n\n    /**\n     * Listas\n     */\n    mesas: any;\n    categorias: any;\n    // mesas: Observable<Mesa[]>;\n    // categorias: Observable<Categoria[]>;\n    \n    /**\n     * Seleccionados\n     */\n    mesa: Mesa;\n    categoria: Categoria;\n    fileCaptura: any;\n\n    mesasCandidatos: MesaCandidato[];\n\n    isSubmiting:boolean = false;\n\n    idPuntoMuestral: number;\n\n    constructor(\n        private authService: AuthService,\n        private route: ActivatedRoute,\n        private cameraService: CameraService,\n        private utilsService: UtilsService\n    ) { }\n\n    /**\n     * Inicializo listas\n     */\n    ngOnInit() {\n        this.route.params.subscribe(\n            params => {\n                this.idPuntoMuestral = params.idPuntoMuestral;\n                this.mesas = this.authService.getMesasByPuntoMuestral(params.idPuntoMuestral)\n            }\n        );\n\n        // this.categorias = this.authService.getCategorias();\n    }\n\n    onChangeMesa = (m: Mesa) => {\n        this.clearAll(true);\n        this.categorias = this.authService.getCategoriasByMesaAndPuntoMuestral(this.idPuntoMuestral, m);\n    }\n\n    /**\n     * Cargo los candidatos de la categoria seleccionada\n     * Me creo las nuevas mesasCandidatos que voy a mandar\n     */\n    onChangeCategoria = (c: Categoria) => \n        this.authService.getCandidatosByCategoria(c.id)\n            .then(\n                (candidatos: any) => candidatos\n                    .sort(\n                        (a: Candidato, b: Candidato) => a.candidatoTipo - b.candidatoTipo\n                    )\n                    .map (\n                        c => new MesaCandidato({\n                            mesa: this.mesa,\n                            candidato: c\n                        })\n                    )\n            )\n            .then((mcs: MesaCandidato[]) => this.mesasCandidatos = mcs)\n\n\n    /**\n     * Toma una foto y guarda el archivo en fileCaptura\n     */\n    onClickFoto = () => {\n        this.cameraService.takePictureAndReturnFile()\n            .then(\n                (f) => this.fileCaptura = f\n            )\n    }\n\n    /**\n     * Valida datos\n     */\n    validarDatos = () => {\n\n        // Primero compruebo que ningun campo sea nulo, o 0, o texto\n        const camposNulos = this.mesasCandidatos\n            .some(\n                (mc: MesaCandidato) => \n                    !mc.cantidadVotos ||\n                    mc.cantidadVotos === 0\n            )\n\n        if (camposNulos) {\n            this.utilsService.showError({\n                error: {\n                    status: 'error',\n                    body: `Falta completar algun campo, o alguno es 0`\n                }\n            })\n            return false\n        }\n\n        // RN: Candidato total votos tiene que ser menor o igual a 350\n        const candidatoTotalVotos = this.mesasCandidatos.find(mc => mc.candidato.candidatoTipo === candidatosTipos.TOTAL_VOTOS);\n        \n        if (candidatoTotalVotos.cantidadVotos > reglas.MAX_VOTOS) {\n            this.utilsService.showError({\n                error: {\n                    status: 'error',\n                    body: `Total Votos supera la cantidad máxima permitida: ${reglas.MAX_VOTOS}`\n                }\n            })\n            return false;\n        }\n\n\n        // RN: Sumatoria cnadidatos exceptuando total votos tiene que ser menor o igual a 350\n        const sumTotalVotos = this.mesasCandidatos\n            .filter(\n                mc => \n                    mc.candidato.candidatoTipo !== candidatosTipos.TOTAL_VOTOS &&\n                    mc.candidato.candidatoTipo !== candidatosTipos.TOTAL_VOTOS_VALIDO\n            )\n            .reduce(\n                (acc, mc) => acc + Number(mc.cantidadVotos),\n                0\n            )\n\n        if (sumTotalVotos > reglas.MAX_VOTOS) {\n            this.utilsService.showError({\n                error: {\n                    status: 'error',\n                    body: `La suma de los votos de cada candidato supera la cantidad máxima permitida: ${reglas.MAX_VOTOS}`\n                }\n            })\n            return false\n        }\n\n\n        // RN: Candidato Total Votos Valido tiene que ser <= a Total votos, y >= a la suma de los votos de los candidatos\n        const candidatoTotalVotosValido = this.mesasCandidatos.find(mc => mc.candidato.candidatoTipo === candidatosTipos.TOTAL_VOTOS_VALIDO);\n\n        if (\n            candidatoTotalVotosValido.cantidadVotos > candidatoTotalVotos.cantidadVotos ||\n            candidatoTotalVotosValido.cantidadVotos < sumTotalVotos\n        ) {\n            this.utilsService.showError({\n                error: {\n                    status: 'error',\n                    body: `Total Votos Valido tiene que ser menor o igual a Total votos, y mayor o igual a la suma de los votos de los candidatos`\n                }\n            })\n            return false;\n        }\n        \n\n\n        return true;\n    }\n\n    /**\n     * Hago el post a traves de authService\n     */\n    onClickConfirmar = () => {\n\n        // Valido datos\n        const datosValidos = this.validarDatos();\n\n        debugger;\n\n        if (datosValidos) {\n\n            this.isSubmiting = true;\n            this.authService.postMesasCandidatos(this.mesasCandidatos, this.fileCaptura, this.mesa, this.categoria)\n                .then(\n                    resp => {\n                        this.utilsService.showSuccess()\n                            .then(\n                                resp => {\n                                    this.clearAll();\n                                    this.isSubmiting = false;\n                                }\n                            )\n                    }\n                )\n                .catch(\n                    err => this.utilsService.showError(err)\n                        .then(\n                            resp => this.isSubmiting = false\n                        )\n                )\n        }\n    }\n\n    clearAll = (excepMesa = false) => {\n        if (excepMesa) {\n            this.mesasCandidatos = null;\n            this.categorias = null;\n            this.fileCaptura = null\n            this.categoria = null;\n        } else {\n            this.mesa = null;\n            this.mesasCandidatos = null;\n            this.categorias = null;\n            this.fileCaptura = null\n            this.categoria = null;\n        }\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Camera, CameraOptions } from '@ionic-native/camera/ngx';\n\nimport { File } from '@ionic-native/file/ngx';\n\n\n@Injectable()\nexport class CameraService {\n    constructor(\n        private camera: Camera,\n        private file: File\n    ) { }\n\n    /**\n     * Tomar una foto y devolver el archivo (FileEntry)\n     */\n    takePictureAndReturnFile = () => new Promise(\n        (resolve, reject) =>\n            this.camera.getPicture({\n                quality: 50,\n                destinationType: this.camera.DestinationType.FILE_URI,\n                encodingType: this.camera.EncodingType.JPEG,\n                mediaType: this.camera.MediaType.PICTURE\n            })\n                .then(\n                    imageData =>\n                        this.file.resolveLocalFilesystemUrl(imageData)\n                            .then(\n                                (fileEntry: any) =>\n                                    fileEntry.file(\n                                        function(file) {\n                                            \n                                            const reader = new FileReader();\n                                            reader.onloadend = function(e) {\n                                                const imgBlob = new Blob([ this.result ],  { \n                                                    type: \"image/jpeg\"                                                    \n                                                });\n                                                \n                                                resolve(imgBlob)\n                                            };\n\n                                            reader.readAsArrayBuffer(file);\n                            \n                                        },\n                                        err => reject(err)\n                                    )\n                            )\n                            .catch(err => reject(err))\n\n                )\n                .catch(err => reject(err))\n    )\n\n\n    // parseaTodo = () => {\n    //     var fd = new FormData();\n    //     window.resolveLocalFileSystemURL(attachment.img, function(fileEntry) {\n            // fileEntry.file(function(file) {\n            //     var reader = new FileReader();\n            //     reader.onloadend = function(e) {\n            //         var imgBlob = new Blob([ this.result ], { type: \"image/jpeg\" } );\n            //         fd.append('attachment', imgBlob);\n            //         fd.append('uuid', attachment.uuid);\n            //         fd.append('userRoleId', 12345);\n            //         console.log(fd);\n            //         //post form call here\n            //     };\n            //     reader.readAsArrayBuffer(file);\n\n            // }, function(e){$scope.errorHandler(e)});\n    //     }, function(e){$scope.errorHandler(e)});\n    // }\n\n\n}"],"sourceRoot":""}