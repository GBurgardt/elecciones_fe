{"version":3,"sources":["webpack:///./src/app/constants/tipos-puntos-muestrales.ts","webpack:///./src/app/models/punto-muestral.model.ts","webpack:///./src/app/pages/login/login.module.ts","webpack:///./src/app/pages/login/login.page.html","webpack:///./src/app/pages/login/login.page.scss","webpack:///./src/app/pages/login/login.page.ts"],"names":[],"mappings":"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","file":"pages-login-login-module.js","sourcesContent":["export default {\n    TD: 1,\n    CANDIDATO: 2,\n};","export class PuntoMuestral {\n    id: number;\n    comportamiento: string;\n    idCircuito: string;\n    celular: string;\n    peso: number;\n    idTipo: number;\n    registroIngreso: boolean;\n\n\n    constructor(private puntoMuestral: { \n        id: number, \n        comportamiento: string,\n        id_circuito: string,\n        celular: string,\n        peso: number,\n        id_tipo: number,\n        registro_ingreso: boolean\n    }) {\n        this.id = puntoMuestral.id;\n        this.comportamiento = puntoMuestral.comportamiento;\n        this.idCircuito = puntoMuestral.id_circuito;\n        this.celular = puntoMuestral.celular;\n        this.peso = puntoMuestral.peso;\n        this.idTipo = puntoMuestral.id_tipo;\n        this.registroIngreso = puntoMuestral.registro_ingreso;\n    };\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\n\nimport { AuthService } from '../../services/auth.service';\nimport { LoginPage } from './login.page';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        RouterModule.forChild([\n            {\n                path: '',\n                component: LoginPage\n            }\n        ])\n    ],\n    declarations: [LoginPage],\n    providers: [\n        AuthService\n    ]\n})\nexport class LoginPageModule { }\n","module.exports = \"<ion-content class=\\\"btn-container\\\">\\n\\n    <ion-header class=\\\"ion-margin-bottom\\\">\\n        <ion-toolbar color=\\\"primary\\\">\\n            <ion-title>Ingreso</ion-title>\\n        </ion-toolbar>\\n    </ion-header>\\n\\n\\n    <ion-item class=\\\"ion-margin-bottom\\\">\\n        <ion-label position=\\\"floating\\\">Ingrese su celular: </ion-label>\\n        <ion-input [(ngModel)]=\\\"celular\\\" type=\\\"number\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-button [disabled]=\\\"!celular\\\" (click)=\\\"onClickReportarPresencia()\\\" expand=\\\"block\\\" fill=\\\"outline\\\">Reportar Presencia</ion-button>\\n    <ion-button [disabled]=\\\"!celular\\\" (click)=\\\"onClickIngresar()\\\" expand=\\\"block\\\">Ingresar</ion-button>\\n\\n\\n    <ion-button href=\\\"https://www.youtube.com/watch?v=aYOXFNVpkSc&feature=youtu.be\\\" style=\\\"margin-top: 50px\\\" expand=\\\"block\\\" fill=\\\"outline\\\">\\n        Tutorial\\n    </ion-button>\\n\\n\\n\\n\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\"","import { Component } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\nimport { PuntoMuestral } from 'src/app/models/punto-muestral.model';\nimport tiposPuntosMuestrales from 'src/app/constants/tipos-puntos-muestrales';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: 'login.page.html',\n    styleUrls: ['login.page.scss'],\n})\nexport class LoginPage {\n\n    celular: string\n\n    constructor(\n        private authService: AuthService,\n        private router: Router,\n        private alertController: AlertController\n    ) { }\n\n    onClickIngresar = () => this.authService.getPuntoMuestralByCelular(this.celular)\n        .then(\n            (resp: any) => {\n                if (resp && resp.length > 0) {\n\n                    const puntoMuestral: PuntoMuestral = new PuntoMuestral(resp[0]);\n\n                    // \n                    if (\n                        puntoMuestral.idTipo === tiposPuntosMuestrales.TD &&\n                        !puntoMuestral.registroIngreso\n                    ) {\n                        this.alertController.create({\n                            header: 'Error',\n                            message: 'Antes de ingresar debe reportar su presencia',\n                            buttons: ['Confirmar']\n                        }).then(alert => alert.present())\n                    } else {\n                        if (puntoMuestral.idTipo === tiposPuntosMuestrales.TD) {\n                            this.router.navigate([`/home/${puntoMuestral.id}`])\n                        } else {\n                            this.router.navigate([`/reportes/${puntoMuestral.id}`])\n                        }\n                    }\n\n                } else {\n                    this.alertController.create({\n                        header: 'Error',\n                        message: 'El nro de celular ingresado es incorrecto',\n                        buttons: ['Confirmar']\n                    }).then(alert => alert.present())\n                }\n            }\n        )\n        .catch(\n            err => {\n                // console.log(err.message)\n                // debugger;\n                this.alertController.create({\n                    header: 'Error',\n                    message: err.message,\n                    buttons: ['Confirmar']\n                }).then(alert => alert.present())\n            }\n\n        )\n\n    onClickReportarPresencia = () => this.authService.getPuntoMuestralByCelular(this.celular)\n        .then(\n            (resp: any) => {\n\n                const puntoMuestral: PuntoMuestral = new PuntoMuestral(resp[0]);\n                const currentRegistroIngreso = puntoMuestral.registroIngreso;\n\n                // Si el ingreso ya esta ingresado, muestro mensaje\n                if (currentRegistroIngreso) {\n                    this.alertController.create({\n                        header: 'Error',\n                        message: 'Usted ya reporto su presencia',\n                        buttons: ['Confirmar']\n                    }).then(alert => alert.present())\n                } else {\n\n                    this.authService.setRegistroIngreso(this.celular, true)\n                        .then(\n                            (resp: any) => \n                                this.alertController.create({\n                                    header: resp.status,\n                                    message: resp.body,\n                                    buttons: ['Confirmar']\n                                }).then(alert => alert.present())\n                            \n                        )\n                }\n            }\n        )\n        .catch(\n            err => {\n                console.log(err)\n                this.alertController.create({\n                    header: 'Error',\n                    message: 'Error en el servidor',\n                    buttons: ['Confirmar']\n                }).then(alert => alert.present())\n            }\n\n        )\n\n    // onClickYoutube = () => {\n    //     this.router.navigate([`https://www.youtube.com/watch?v=aYOXFNVpkSc&feature=youtu.be`])\n    // }\n}\n"],"sourceRoot":""}